shader main
type(CS)

user_sgpr_count(9)   // 2 for the buffer resource + 5 for thread/thread group parameters

//s[0:1] the mmeory address for the buffer resource
//s2 x
//s3 x*y
//s4 x*y*z
//s5 X	
//s6 X*Y
//s7 output offset
//s8 loop

tgid_x_en(1)       //s_tgid_x s9
tgid_y_en(1)       //s_tgid_y s10
tgid_z_en(1)       //s_tgid_z s11

//vo for tid_x
//v1 for tid_y
//v2 for tid_z

//fetch the buffer resource through SQC
s_load_dwordx4 s[24:27], s[0:1], 0x0
s_waitcnt 0

//set bit 12 low to select EA0
s_mov_b32 s32, 0xFFFFEFFF
s_and_b32 s24, s24, s32

s_and_b32 s31, s9, 0x1
s_cmpk_eq_i32 s31, 0x1
s_cbranch_scc1 ODD_WAVES

//set bit 12 high to select EA1
s_mov_b32 s32, 0x1000
s_or_b32 s24, s24, s32

ODD_WAVES:

// v3  thread_id_in_group = (tid_z *x*y) + (tid_y*x) + tid_x
v_mad_u32_u24 v3, v1, s2, v0 
v_mad_u32_u24 v3, v2, s3, v3

//s28 thread_group_id = (tgid_z*X*Y) + (tgid_y*X) + tgid_x
s_mul_i32 s28, s_tgid_y, s5
s_add_i32 s28, s28, s_tgid_x
s_mul_i32 s29, s6, s_tgid_z
s_add_i32 s28, s29, s28

//v9 absolute thread id = thread_group_id *(x*y*z) + thread_id_in_group 
v_mov_b32 v9, s28
v_mad_u32_u24 v9, v9, s4, v3

v_mul_i32_i24 v3, v3, 0x10
v_mul_i32_i24 v9, v9, 0x10

s_mov_b32 s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1

s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000

buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1

s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000
buffer_store_dwordx4 v0, v9, s24, s31 offen:1
s_add_i32 s31, s31, 0x6000

s_barrier

s_mov_b32 s31, 0xF0000
s_mov_b32 s32, 0x6000

//store and load s8 times
s_mov_b32 s30, s8

s_cmpk_lt_i32 s9, 0x2
s_cbranch_scc1 ATOMIC_LOOP

LOAD_LOOP:

buffer_load_dwordx4 v4, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v8, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v12, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v16, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v20, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v24, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v28, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v32, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v36, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v40, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000

buffer_load_dwordx4 v4, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v8, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v12, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v16, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v20, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v24, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v28, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v32, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v36, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v40, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000

buffer_load_dwordx4 v4, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v8, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v12, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v16, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v20, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v24, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v28, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v32, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v36, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v40, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000

buffer_load_dwordx4 v4, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v8, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v12, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v16, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v20, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v24, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v28, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v32, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v36, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000
buffer_load_dwordx4 v40, v3, s24, s31 offen:1
s_add_i32 s31, s31, 0x4000

s_sub_u32 s30, s30, 1
s_cmpk_eq_u32 s30, 0
s_cbranch_scc0 LOAD_LOOP


s_cmpk_ge_i32 s9, 0x2
s_cbranch_scc1 END

ATOMIC_LOOP:

buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000

buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000

buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000

buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000
buffer_atomic_add_x2 v0, v3, s24, s32 offen:1 glc:1
s_add_i32 s32, s32, 0x2000

s_sub_u32 s30, s30, 1
s_cmpk_eq_u32 s30, 0
s_cbranch_scc0 ATOMIC_LOOP

//s_waitcnt 0

END:
s_waitcnt 0

s_endpgm
end 

